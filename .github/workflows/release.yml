name: 🚀 Release Pipeline

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '20'

jobs:
  validate-release:
    name: ✅ Validate Release
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔨 Build project
        run: npm run build

      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run smoke tests
        run: npx playwright test --grep="@smoke"

      - name: 🧪 Run critical path tests
        run: npx playwright test --grep="@critical"

      - name: 📊 Generate CTRF summary
        if: always()
        run: npm run ctrf:summary

      - name: 🤖 Generate AI analysis with Bedrock
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-west-2' }}
        run: |
          if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ]; then
            echo "🔄 Running AI analysis with AWS Bedrock..."
            npm run ai:bedrock --log || echo "⚠️ AI analysis failed - continuing with release"
          else
            echo "⚠️ AWS credentials not configured - skipping AI analysis"
          fi

      - name: 📊 Generate release validation report
        if: always()
        run: |
          npm run ctrf:summary
          echo "# 🚀 Release Validation Report" > validation-report.md
          echo "Version: ${{ github.ref_name }}" >> validation-report.md
          echo "Date: $(date)" >> validation-report.md
          echo "" >> validation-report.md
          
          if [ -f "test-results/ctrf-report.json" ]; then
            echo "✅ Tests executed successfully" >> validation-report.md
            echo "" >> validation-report.md
            echo "## 📊 Test Summary" >> validation-report.md
            echo "\`\`\`json" >> validation-report.md
            cat test-results/ctrf-report.json | jq '.results.summary' >> validation-report.md 2>/dev/null || echo "Summary not available" >> validation-report.md
            echo "\`\`\`" >> validation-report.md
          else
            echo "❌ Test execution failed" >> validation-report.md
          fi
          
          # Add AI analysis summary if available
          if [ -f "test-results/ctrf-report.json" ]; then
            AI_TESTS=$(cat test-results/ctrf-report.json | jq '[.results.tests[] | select(.ai != null)] | length' 2>/dev/null || echo "0")
            if [ "$AI_TESTS" -gt 0 ]; then
              echo "" >> validation-report.md
              echo "## 🤖 AI Analysis" >> validation-report.md
              echo "- Tests analyzed: $AI_TESTS" >> validation-report.md
              echo "- AI insights generated for failed tests" >> validation-report.md
            fi
          fi

      - name: 📋 Upload validation artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: release-validation-${{ github.ref_name }}
          path: |
            playwright-report/
            test-results/
            ai-test-report-*.html
            validation-report.md
          retention-days: 90

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run npm audit
        run: npm audit --audit-level high
        continue-on-error: true

      - name: 🔒 Run security scan
        run: |
          npx audit-ci --config audit-ci.json
        continue-on-error: true

  documentation:
    name: 📚 Update Documentation
    runs-on: ubuntu-latest
    needs: [validate-release]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📚 Generate API docs
        run: |
          echo "# 📚 API Documentation - ${{ github.ref_name }}" > API.md
          echo "Generated on: $(date)" >> API.md
          echo "" >> API.md
          echo "## Available Scripts" >> API.md
          echo "" >> API.md
          echo "### Testing Commands" >> API.md
          echo "- \`npm test\` - Run all tests with AI analysis" >> API.md
          echo "- \`npm run test:only\` - Run tests without AI analysis" >> API.md
          echo "- \`npm run test:summary\` - Run tests with CTRF summary" >> API.md
          echo "- \`npm run test:bedrock\` - Run tests with Bedrock AI analysis" >> API.md
          echo "" >> API.md
          echo "### Reporting Commands" >> API.md
          echo "- \`npm run ctrf:summary\` - Generate CTRF summary" >> API.md
          echo "- \`npm run ctrf:view\` - View CTRF reports" >> API.md
          echo "- \`npm run ai:report\` - Generate AI analysis" >> API.md
          echo "- \`npm run ai:bedrock\` - Generate Bedrock AI analysis" >> API.md
          echo "" >> API.md
          echo "### Debug Commands" >> API.md
          echo "- \`npm run debug:bedrock:full\` - Comprehensive Bedrock diagnostics" >> API.md
          echo "- \`npm run debug:bedrock\` - Basic Bedrock connectivity test" >> API.md
          echo "- \`npm run bedrock:cli\` - Interactive Bedrock CLI" >> API.md
          echo "- \`npm run bedrock:test\` - Quick Bedrock connectivity test" >> API.md

      - name: 📚 Update changelog
        run: |
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## [${{ github.ref_name }}] - $(date +%Y-%m-%d)" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Added" >> CHANGELOG.md
          echo "- Release validation pipeline with AI analysis" >> CHANGELOG.md
          echo "- AWS Bedrock integration for AI test analysis" >> CHANGELOG.md
          echo "- Enhanced CTRF reporting in release pipeline" >> CHANGELOG.md
          echo "- Comprehensive Bedrock debugging tools" >> CHANGELOG.md
          echo "- Interactive Bedrock CLI for model testing" >> CHANGELOG.md
          echo "- Enhanced GitHub Actions workflows" >> CHANGELOG.md
          echo "- Automated AI insights for failed tests" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Enhanced" >> CHANGELOG.md
          echo "- Error handling for AWS Bedrock integration" >> CHANGELOG.md
          echo "- Credential management with profile support" >> CHANGELOG.md
          echo "- Detailed diagnostic and troubleshooting tools" >> CHANGELOG.md
          echo "- Release artifacts now include AI analysis reports" >> CHANGELOG.md

      - name: 📤 Commit documentation updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add API.md CHANGELOG.md
          git diff --staged --quiet || git commit -m "docs: update documentation for ${{ github.ref_name }}"
          git push
        continue-on-error: true

  notify-release:
    name: 📢 Notify Release
    runs-on: ubuntu-latest
    needs: [validate-release, security-scan, documentation]
    if: always()
    
    steps:
      - name: 📢 Create release summary
        uses: actions/github-script@v7
        with:
          script: |
            const releaseNotes = `
            ## 🚀 Release ${{ github.ref_name }} Summary
            
            ### ✅ Validation Status
            - Smoke Tests: ${{ needs.validate-release.result == 'success' && '✅ Passed' || '❌ Failed' }}
            - Security Scan: ${{ needs.security-scan.result == 'success' && '✅ Passed' || '❌ Failed' }}
            - Documentation: ${{ needs.documentation.result == 'success' && '✅ Updated' || '❌ Failed' }}
            
            ### 📊 Test Results & AI Analysis
            This release includes:
            - 🎭 Playwright test execution with CTRF reporting
            - 🤖 AWS Bedrock AI analysis for failed tests
            - 📈 Enhanced error diagnostics and troubleshooting
            - 🔧 Interactive debugging tools for Bedrock integration
            
            Check the artifacts for:
            - Detailed test reports (playwright-report/)
            - CTRF standardized reports (test-results/)
            - AI analysis insights (ai-reports/)
            - Validation summary (validation-report.md)
            
            ### 🛠️ New Features
            - AWS Bedrock integration with multiple model support
            - Comprehensive debugging tools (\`npm run debug:bedrock:full\`)
            - Interactive Bedrock CLI (\`npm run bedrock:cli\`)
            - Enhanced error handling and credential management
            - Automated AI insights in release pipeline
            
            ### 🔗 Links
            - [Release Page](https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }})
            - [Validation Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - [Bedrock Setup Guide](https://github.com/${{ github.repository }}/blob/main/BEDROCK-TROUBLESHOOTING.md)
            `;
            
            // Update the release description
            try {
              const release = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: '${{ github.ref_name }}'
              });
              
              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.data.id,
                body: release.data.body + '\n\n' + releaseNotes
              });
            } catch (error) {
              console.log('Could not update release notes:', error);
            }
